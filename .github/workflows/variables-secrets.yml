 name: Explorando variables y secretos
 on: 
    ## Sirve para ejecutar manualmente el workflow
    workflow_dispatch:
    ## sirve para un temporizador
    #schedule:
     # - cron: "*/1 * * * *"
     #push

 env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx
 jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker build
          run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
        - name: Docker login
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        - name: Docker publish
          run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    deploy:
      needs: docker
      ## usamos la propiedad concurrency con Evitar ejecuciones duplicadas
      ## Unos de los job demoraba 20 minutos por ejemplo un deploy.. Dos desarrolladores hacieron
      ## push casi al mismo tiempo y se dispararon dos despliegues en paralelo en el worflow
      ##  que pasaria? se duplicada la ejecuccion y para la duplicacion utilizamos concurrency
      concurrency:
        group: production-deployment
        cancel-in-progress: true
      runs-on: ubuntu-latest
      steps:
        - name: Docker run
          run: |
            echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
            sleep 600s

